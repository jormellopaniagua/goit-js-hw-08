{"mappings":"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","sources":["<anon>","src/js/03-feedback.js","node_modules/lodash-es/throttle.js","node_modules/lodash-es/debounce.js","node_modules/lodash-es/isObject.js","node_modules/lodash-es/now.js","node_modules/lodash-es/_root.js","node_modules/lodash-es/_freeGlobal.js","node_modules/lodash-es/toNumber.js","node_modules/lodash-es/_baseTrim.js","node_modules/lodash-es/_trimmedEndIndex.js","node_modules/lodash-es/isSymbol.js","node_modules/lodash-es/_baseGetTag.js","node_modules/lodash-es/_Symbol.js","node_modules/lodash-es/_getRawTag.js","node_modules/lodash-es/_objectToString.js","node_modules/lodash-es/isObjectLike.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  /**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */ function $1146963f863a9576$var$isObject(value) {\n    var type = typeof value;\n    return value != null && (type == \"object\" || type == \"function\");\n}\nvar $1146963f863a9576$export$2e2bcd8739ae039 = $1146963f863a9576$var$isObject;\n\n\n/** Detect free variable `global` from Node.js. */ var $bb8bbff47a3b420b$var$freeGlobal = typeof $parcel$global == \"object\" && $parcel$global && $parcel$global.Object === Object && $parcel$global;\nvar $bb8bbff47a3b420b$export$2e2bcd8739ae039 = $bb8bbff47a3b420b$var$freeGlobal;\n\n\n/** Detect free variable `self`. */ var $4cb410b494b5bfba$var$freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n/** Used as a reference to the global object. */ var $4cb410b494b5bfba$var$root = (0, $bb8bbff47a3b420b$export$2e2bcd8739ae039) || $4cb410b494b5bfba$var$freeSelf || Function(\"return this\")();\nvar $4cb410b494b5bfba$export$2e2bcd8739ae039 = $4cb410b494b5bfba$var$root;\n\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */ var $8f212f5525d45e4c$var$now = function() {\n    return (0, $4cb410b494b5bfba$export$2e2bcd8739ae039).Date.now();\n};\nvar $8f212f5525d45e4c$export$2e2bcd8739ae039 = $8f212f5525d45e4c$var$now;\n\n\n/** Used to match a single whitespace character. */ var $385bb2fab708c6c5$var$reWhitespace = /\\s/;\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */ function $385bb2fab708c6c5$var$trimmedEndIndex(string) {\n    var index = string.length;\n    while(index-- && $385bb2fab708c6c5$var$reWhitespace.test(string.charAt(index)));\n    return index;\n}\nvar $385bb2fab708c6c5$export$2e2bcd8739ae039 = $385bb2fab708c6c5$var$trimmedEndIndex;\n\n\n/** Used to match leading whitespace. */ var $aa24a8a2cd0ed953$var$reTrimStart = /^\\s+/;\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */ function $aa24a8a2cd0ed953$var$baseTrim(string) {\n    return string ? string.slice(0, (0, $385bb2fab708c6c5$export$2e2bcd8739ae039)(string) + 1).replace($aa24a8a2cd0ed953$var$reTrimStart, \"\") : string;\n}\nvar $aa24a8a2cd0ed953$export$2e2bcd8739ae039 = $aa24a8a2cd0ed953$var$baseTrim;\n\n\n\n\n/** Built-in value references. */ var $0fa9a02f9756f657$var$Symbol = (0, $4cb410b494b5bfba$export$2e2bcd8739ae039).Symbol;\nvar $0fa9a02f9756f657$export$2e2bcd8739ae039 = $0fa9a02f9756f657$var$Symbol;\n\n\n\n/** Used for built-in method references. */ var $b8bd64751e10f60b$var$objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var $b8bd64751e10f60b$var$hasOwnProperty = $b8bd64751e10f60b$var$objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var $b8bd64751e10f60b$var$nativeObjectToString = $b8bd64751e10f60b$var$objectProto.toString;\n/** Built-in value references. */ var $b8bd64751e10f60b$var$symToStringTag = (0, $0fa9a02f9756f657$export$2e2bcd8739ae039) ? (0, $0fa9a02f9756f657$export$2e2bcd8739ae039).toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */ function $b8bd64751e10f60b$var$getRawTag(value) {\n    var isOwn = $b8bd64751e10f60b$var$hasOwnProperty.call(value, $b8bd64751e10f60b$var$symToStringTag), tag = value[$b8bd64751e10f60b$var$symToStringTag];\n    try {\n        value[$b8bd64751e10f60b$var$symToStringTag] = undefined;\n        var unmasked = true;\n    } catch (e) {}\n    var result = $b8bd64751e10f60b$var$nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) value[$b8bd64751e10f60b$var$symToStringTag] = tag;\n        else delete value[$b8bd64751e10f60b$var$symToStringTag];\n    }\n    return result;\n}\nvar $b8bd64751e10f60b$export$2e2bcd8739ae039 = $b8bd64751e10f60b$var$getRawTag;\n\n\n/** Used for built-in method references. */ var $1403d80719b32f26$var$objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var $1403d80719b32f26$var$nativeObjectToString = $1403d80719b32f26$var$objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */ function $1403d80719b32f26$var$objectToString(value) {\n    return $1403d80719b32f26$var$nativeObjectToString.call(value);\n}\nvar $1403d80719b32f26$export$2e2bcd8739ae039 = $1403d80719b32f26$var$objectToString;\n\n\n/** `Object#toString` result references. */ var $622194736393697a$var$nullTag = \"[object Null]\", $622194736393697a$var$undefinedTag = \"[object Undefined]\";\n/** Built-in value references. */ var $622194736393697a$var$symToStringTag = (0, $0fa9a02f9756f657$export$2e2bcd8739ae039) ? (0, $0fa9a02f9756f657$export$2e2bcd8739ae039).toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */ function $622194736393697a$var$baseGetTag(value) {\n    if (value == null) return value === undefined ? $622194736393697a$var$undefinedTag : $622194736393697a$var$nullTag;\n    return $622194736393697a$var$symToStringTag && $622194736393697a$var$symToStringTag in Object(value) ? (0, $b8bd64751e10f60b$export$2e2bcd8739ae039)(value) : (0, $1403d80719b32f26$export$2e2bcd8739ae039)(value);\n}\nvar $622194736393697a$export$2e2bcd8739ae039 = $622194736393697a$var$baseGetTag;\n\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */ function $97d6226034a0ca4f$var$isObjectLike(value) {\n    return value != null && typeof value == \"object\";\n}\nvar $97d6226034a0ca4f$export$2e2bcd8739ae039 = $97d6226034a0ca4f$var$isObjectLike;\n\n\n/** `Object#toString` result references. */ var $32500a1e560de4f0$var$symbolTag = \"[object Symbol]\";\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */ function $32500a1e560de4f0$var$isSymbol(value) {\n    return typeof value == \"symbol\" || (0, $97d6226034a0ca4f$export$2e2bcd8739ae039)(value) && (0, $622194736393697a$export$2e2bcd8739ae039)(value) == $32500a1e560de4f0$var$symbolTag;\n}\nvar $32500a1e560de4f0$export$2e2bcd8739ae039 = $32500a1e560de4f0$var$isSymbol;\n\n\n/** Used as references for various `Number` constants. */ var $eb3eedae94cf47db$var$NAN = 0 / 0;\n/** Used to detect bad signed hexadecimal string values. */ var $eb3eedae94cf47db$var$reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */ var $eb3eedae94cf47db$var$reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */ var $eb3eedae94cf47db$var$reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */ var $eb3eedae94cf47db$var$freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */ function $eb3eedae94cf47db$var$toNumber(value) {\n    if (typeof value == \"number\") return value;\n    if ((0, $32500a1e560de4f0$export$2e2bcd8739ae039)(value)) return $eb3eedae94cf47db$var$NAN;\n    if ((0, $1146963f863a9576$export$2e2bcd8739ae039)(value)) {\n        var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n        value = (0, $1146963f863a9576$export$2e2bcd8739ae039)(other) ? other + \"\" : other;\n    }\n    if (typeof value != \"string\") return value === 0 ? value : +value;\n    value = (0, $aa24a8a2cd0ed953$export$2e2bcd8739ae039)(value);\n    var isBinary = $eb3eedae94cf47db$var$reIsBinary.test(value);\n    return isBinary || $eb3eedae94cf47db$var$reIsOctal.test(value) ? $eb3eedae94cf47db$var$freeParseInt(value.slice(2), isBinary ? 2 : 8) : $eb3eedae94cf47db$var$reIsBadHex.test(value) ? $eb3eedae94cf47db$var$NAN : +value;\n}\nvar $eb3eedae94cf47db$export$2e2bcd8739ae039 = $eb3eedae94cf47db$var$toNumber;\n\n\n/** Error message constants. */ var $2b9c0da2d9bf5406$var$FUNC_ERROR_TEXT = \"Expected a function\";\n/* Built-in method references for those with the same name as other `lodash` methods. */ var $2b9c0da2d9bf5406$var$nativeMax = Math.max, $2b9c0da2d9bf5406$var$nativeMin = Math.min;\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */ function $2b9c0da2d9bf5406$var$debounce(func, wait, options) {\n    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n    if (typeof func != \"function\") throw new TypeError($2b9c0da2d9bf5406$var$FUNC_ERROR_TEXT);\n    wait = (0, $eb3eedae94cf47db$export$2e2bcd8739ae039)(wait) || 0;\n    if ((0, $1146963f863a9576$export$2e2bcd8739ae039)(options)) {\n        leading = !!options.leading;\n        maxing = \"maxWait\" in options;\n        maxWait = maxing ? $2b9c0da2d9bf5406$var$nativeMax((0, $eb3eedae94cf47db$export$2e2bcd8739ae039)(options.maxWait) || 0, wait) : maxWait;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n    }\n    function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n    }\n    function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n    }\n    function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;\n        return maxing ? $2b9c0da2d9bf5406$var$nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n    }\n    function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n    }\n    function timerExpired() {\n        var time = (0, $8f212f5525d45e4c$export$2e2bcd8739ae039)();\n        if (shouldInvoke(time)) return trailingEdge(time);\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n    }\n    function trailingEdge(time) {\n        timerId = undefined;\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) return invokeFunc(time);\n        lastArgs = lastThis = undefined;\n        return result;\n    }\n    function cancel() {\n        if (timerId !== undefined) clearTimeout(timerId);\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n    }\n    function flush() {\n        return timerId === undefined ? result : trailingEdge((0, $8f212f5525d45e4c$export$2e2bcd8739ae039)());\n    }\n    function debounced() {\n        var time = (0, $8f212f5525d45e4c$export$2e2bcd8739ae039)(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n            if (timerId === undefined) return leadingEdge(lastCallTime);\n            if (maxing) {\n                // Handle invocations in a tight loop.\n                clearTimeout(timerId);\n                timerId = setTimeout(timerExpired, wait);\n                return invokeFunc(lastCallTime);\n            }\n        }\n        if (timerId === undefined) timerId = setTimeout(timerExpired, wait);\n        return result;\n    }\n    debounced.cancel = cancel;\n    debounced.flush = flush;\n    return debounced;\n}\nvar $2b9c0da2d9bf5406$export$2e2bcd8739ae039 = $2b9c0da2d9bf5406$var$debounce;\n\n\n\n/** Error message constants. */ var $211888181db1e468$var$FUNC_ERROR_TEXT = \"Expected a function\";\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */ function $211888181db1e468$var$throttle(func, wait, options) {\n    var leading = true, trailing = true;\n    if (typeof func != \"function\") throw new TypeError($211888181db1e468$var$FUNC_ERROR_TEXT);\n    if ((0, $1146963f863a9576$export$2e2bcd8739ae039)(options)) {\n        leading = \"leading\" in options ? !!options.leading : leading;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n    }\n    return (0, $2b9c0da2d9bf5406$export$2e2bcd8739ae039)(func, wait, {\n        \"leading\": leading,\n        \"maxWait\": wait,\n        \"trailing\": trailing\n    });\n}\nvar $211888181db1e468$export$2e2bcd8739ae039 = $211888181db1e468$var$throttle;\n\n\nconst $945622fd0f572e60$var$feedbackForm = document.querySelector(\".feedback-form\");\nconst $945622fd0f572e60$var$emailInput = $945622fd0f572e60$var$feedbackForm.querySelector('input[name=\"email\"]');\nconst $945622fd0f572e60$var$messageTextarea = $945622fd0f572e60$var$feedbackForm.querySelector('textarea[name=\"message\"]');\n// Función para guardar el estado del formulario en el almacenamiento local\nconst $945622fd0f572e60$var$saveFormState = (0, $211888181db1e468$export$2e2bcd8739ae039)(()=>{\n    const formState = {\n        email: $945622fd0f572e60$var$emailInput.value,\n        message: $945622fd0f572e60$var$messageTextarea.value\n    };\n    localStorage.setItem(\"feedback-form-state\", JSON.stringify(formState));\n}, 500);\n// Función para cargar el estado del formulario desde el almacenamiento local\nconst $945622fd0f572e60$var$loadFormState = ()=>{\n    const storedState = localStorage.getItem(\"feedback-form-state\");\n    if (storedState) {\n        const { email: email, message: message } = JSON.parse(storedState);\n        $945622fd0f572e60$var$emailInput.value = email;\n        $945622fd0f572e60$var$messageTextarea.value = message;\n    }\n};\n// Cargar el estado del formulario al cargar la página\n$945622fd0f572e60$var$loadFormState();\n// Escuchar el evento input en el formulario y guardar el estado\n$945622fd0f572e60$var$feedbackForm.addEventListener(\"input\", $945622fd0f572e60$var$saveFormState);\n// Escuchar el evento submit en el formulario\n$945622fd0f572e60$var$feedbackForm.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const formState = {\n        email: $945622fd0f572e60$var$emailInput.value,\n        message: $945622fd0f572e60$var$messageTextarea.value\n    };\n    console.log(formState);\n    // Limpiar el almacenamiento y los campos del formulario\n    localStorage.removeItem(\"feedback-form-state\");\n    $945622fd0f572e60$var$emailInput.value = \"\";\n    $945622fd0f572e60$var$messageTextarea.value = \"\";\n});\n\n\n//# sourceMappingURL=03-feedback.174195ca.js.map\n","import { throttle } from 'lodash-es';\n\nconst feedbackForm = document.querySelector('.feedback-form');\nconst emailInput = feedbackForm.querySelector('input[name=\"email\"]');\nconst messageTextarea = feedbackForm.querySelector('textarea[name=\"message\"]');\n\n// Función para guardar el estado del formulario en el almacenamiento local\nconst saveFormState = throttle(() => {\n  const formState = {\n    email: emailInput.value,\n    message: messageTextarea.value,\n  };\n  localStorage.setItem('feedback-form-state', JSON.stringify(formState));\n}, 500);\n\n// Función para cargar el estado del formulario desde el almacenamiento local\nconst loadFormState = () => {\n  const storedState = localStorage.getItem('feedback-form-state');\n  if (storedState) {\n    const { email, message } = JSON.parse(storedState);\n    emailInput.value = email;\n    messageTextarea.value = message;\n  }\n};\n\n// Cargar el estado del formulario al cargar la página\nloadFormState();\n\n// Escuchar el evento input en el formulario y guardar el estado\nfeedbackForm.addEventListener('input', saveFormState);\n\n// Escuchar el evento submit en el formulario\nfeedbackForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const formState = {\n    email: emailInput.value,\n    message: messageTextarea.value,\n  };\n  console.log(formState);\n  // Limpiar el almacenamiento y los campos del formulario\n  localStorage.removeItem('feedback-form-state');\n  emailInput.value = '';\n  messageTextarea.value = '';\n});\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n"],"names":["$parcel$global","globalThis","self","window","global","$1146963f863a9576$export$2e2bcd8739ae039","value","type","$bb8bbff47a3b420b$var$freeGlobal","Object","$4cb410b494b5bfba$var$freeSelf","$4cb410b494b5bfba$var$root","Function","$8f212f5525d45e4c$export$2e2bcd8739ae039","Date","now","$385bb2fab708c6c5$var$reWhitespace","$385bb2fab708c6c5$export$2e2bcd8739ae039","string","index","length","test","charAt","$aa24a8a2cd0ed953$var$reTrimStart","$0fa9a02f9756f657$var$Symbol","Symbol","$b8bd64751e10f60b$var$objectProto","prototype","$b8bd64751e10f60b$var$hasOwnProperty","hasOwnProperty","$b8bd64751e10f60b$var$nativeObjectToString","toString","$b8bd64751e10f60b$var$symToStringTag","toStringTag","undefined","$b8bd64751e10f60b$export$2e2bcd8739ae039","isOwn","call","tag","unmasked","e","result","$1403d80719b32f26$var$nativeObjectToString","$1403d80719b32f26$var$objectProto","$622194736393697a$var$symToStringTag","$32500a1e560de4f0$export$2e2bcd8739ae039","$eb3eedae94cf47db$var$NAN","$eb3eedae94cf47db$var$reIsBadHex","$eb3eedae94cf47db$var$reIsBinary","$eb3eedae94cf47db$var$reIsOctal","$eb3eedae94cf47db$var$freeParseInt","parseInt","$eb3eedae94cf47db$export$2e2bcd8739ae039","other","valueOf","slice","replace","isBinary","$2b9c0da2d9bf5406$var$nativeMax","Math","max","$2b9c0da2d9bf5406$var$nativeMin","min","$2b9c0da2d9bf5406$export$2e2bcd8739ae039","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","timerExpired","timeWaiting","trailingEdge","setTimeout","debounced","isInvoking","arguments","clearTimeout","cancel","flush","$945622fd0f572e60$var$feedbackForm","document","querySelector","$945622fd0f572e60$var$emailInput","$945622fd0f572e60$var$messageTextarea","$945622fd0f572e60$var$saveFormState","formState","email","message","localStorage","setItem","JSON","stringify","$945622fd0f572e60$var$loadFormState","storedState","getItem","parse","addEventListener","event","preventDefault","console","log","removeItem"],"version":3,"file":"03-feedback.174195ca.js.map"}